apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "soteria.fullname" . }}
  namespace: {{ $.Release.Namespace }}
  labels: {{- include "soteria.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "soteria.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingParams.maxSurge }}
      maxUnavailable: {{ .Values.rollingParams.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
      {{- include "soteria.selectorLabels" . | nindent 8 }}
      {{- include "soteria.podLabels" . | nindent 8 }}
    spec:
      containers:
        - name: app
          image:
            "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{ range .Values.service.ports }}
            - containerPort: {{ .port }}
              name: {{ .name }}
              protocol: {{ .protocol | upper }}
            {{ end }}
          resources:
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
          livenessProbe:
            tcpSocket:
              {{ range .Values.service.ports }}
              {{ if eq .name "http" }}
              port: {{ .port }}
              {{ end }}
              {{ end }}
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 29
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            tcpSocket:
              {{ range .Values.service.ports }}
              {{ if eq .name "http" }}
              port: {{ .port }}
              {{ end }}
              {{ end }}
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 23
            successThreshold: 1
            timeoutSeconds: 2
          env:
            - name: TZ
              value: {{ .Values.timezone }}
            {{ if .Values.tracing.useDaemonset }}
            - name: soteria_tracer__endpoint
              value: $(JAEGER_AGENT_HOST):4317
            - name: JAEGER_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            {{ end }}
          volumeMounts:
            - name: configuration
              mountPath: "/app/config.yml"
              subPath: "config.yaml"
              readOnly: true
      volumes:
        - name: configuration
          configMap:
            defaultMode: 0440
            name: {{ include "soteria.fullname" . }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              {{- include "soteria.selectorLabels" . | nindent 14 }}
